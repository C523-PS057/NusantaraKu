pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                script{
                    git url: 'https://github.com/C523-PS057/NusantaraKu.git', branch: 'backend'
                }
            }
        }
        stage('Prepare Environment') {
            steps {
                script {
                    def jenkinsPort = 8080
                    def appKey = sh(script: 'php artisan key:generate --show', returnStdout: true).trim()

                    // Fungsi untuk memeriksa apakah port tersedia
                    def checkPortAvailability = { port ->
                        return sh(script: "lsof -Pi :$port -sTCP:LISTEN -t >/dev/null", returnStatus: true) == 1
                    }

                    // Fungsi untuk menghentikan proses yang menggunakan port tertentu
                    def stopProcessUsingPort = { port ->
                        sh(script: "kill -9 \$(lsof -Pi :$port -sTCP:LISTEN -t)", returnStatus: true)
                    }

                    // Pemeriksaan awal untuk memastikan port tersedia
                    if (checkPortAvailability(jenkinsPort)) {
                        echo "Port $jenkinsPort tersedia. Melanjutkan..."
                    } else {
                        echo "Port $jenkinsPort sedang digunakan oleh proses lain. Menghentikan proses..."
                        stopProcessUsingPort(jenkinsPort)
                    }

                    // Pemeriksaan kembali setelah upaya menghentikan proses
                    if (checkPortAvailability(jenkinsPort)) {
                        echo "Port $jenkinsPort tersedia. Melanjutkan..."
                    } else {
                        error "Gagal membebaskan port. Pipeline dihentikan."
                    }

                    sh 'cp .env.template .env'
                    sh "sed -i 's|!APPKEY|${appKey}|g' .env"
                    
                    sh "sed -i 's|!HOST|${env.DB_HOST}|g' .env"
                    sh "sed -i 's|!PORT|${env.DB_PORT}|g' .env"
                    sh "sed -i 's|!DATABASE|${env.DB_DATABASE}|g' .env"
                    sh "sed -i 's|!USERNAME|${env.DB_USERNAME}|g' .env"
                    sh "sed -i 's|!PASSWORD|${env.DB_PASSWORD}|g' .env"

                    sh "sed -i 's|!MAIL_HOST|${env.MAIL_HOST}|g' .env"
                    sh "sed -i 's|!MAIL_PORT|${env.MAIL_PORT}|g' .env"
                    sh "sed -i 's|!MAIL_USERNAME|${env.MAIL_USERNAME}|g' .env"
                    sh "sed -i 's|!MAIL_PASSWORD|${env.MAIL_PASSWORD}|g' .env"
                    
                    sh "sed -i 's|!GOOGLE_CLIENT_ID|${env.GOOGLE_CLIENT_ID}|g' .env"
                    sh "sed -i 's|!GOOGLE_CLIENT_SECRET|${env.GOOGLE_CLIENT_SECRET}|g' .env"
                    sh "sed -i 's|!GOOGLE_REDIRECT_URI|${env.GOOGLE_REDIRECT_URI}|g' .env"

                }
            }
        }
        stage('Build and Deploy') {
            steps {
                sh 'docker-compose down --volumes --remove-orphans || true'
                sh 'docker-compose up --build -d'
                sh 'echo "Akses Web ==> http://202.10.40.58:8000/"'
            }
        }
    }
}
